{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/benash/FinalProject/TicketMarket/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useEffect, useContext } from \"react\";\nimport { login as apiLogin, register as apiRegister, getCurrentUser } from \"../services/api\";\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Create provider\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is logged in on mount\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n          const response = await getCurrentUser();\n          setUser(response.data);\n        }\n      } catch (err) {\n        console.error(\"Error checking authentication:\", err);\n        localStorage.removeItem(\"token\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkLoggedIn();\n  }, []);\n\n  // Login function\n  const login = async credentials => {\n    try {\n      setError(null);\n      const response = await apiLogin(credentials);\n      const {\n        access_token,\n        user\n      } = response.data;\n\n      // Save token and user data\n      localStorage.setItem(\"token\", access_token);\n      setUser(user);\n      return user;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || \"Login failed\");\n      throw err;\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      setError(null);\n      const response = await apiRegister(userData);\n      return response.data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.detail) || \"Registration failed\");\n      throw err;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setUser(null);\n  };\n\n  // Context value\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 10\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useState","useEffect","useContext","login","apiLogin","register","apiRegister","getCurrentUser","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","user","setUser","loading","setLoading","error","setError","checkLoggedIn","token","localStorage","getItem","response","data","err","console","removeItem","credentials","access_token","setItem","_err$response","_err$response$data","detail","userData","_err$response2","_err$response2$data","logout","value","isAuthenticated","Provider","fileName","lineNumber","columnNumber","_c","useAuth","context","Error","$RefreshReg$"],"sources":["/Users/benash/FinalProject/TicketMarket/frontend/src/context/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useState, useEffect, useContext } from \"react\"\nimport { login as apiLogin, register as apiRegister, getCurrentUser } from \"../services/api\"\n\n// Create context\nconst AuthContext = createContext()\n\n// Create provider\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  // Check if user is logged in on mount\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const token = localStorage.getItem(\"token\")\n        if (token) {\n          const response = await getCurrentUser()\n          setUser(response.data)\n        }\n      } catch (err) {\n        console.error(\"Error checking authentication:\", err)\n        localStorage.removeItem(\"token\")\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    checkLoggedIn()\n  }, [])\n\n  // Login function\n  const login = async (credentials) => {\n    try {\n      setError(null)\n      const response = await apiLogin(credentials)\n      const { access_token, user } = response.data\n\n      // Save token and user data\n      localStorage.setItem(\"token\", access_token)\n      setUser(user)\n      return user\n    } catch (err) {\n      setError(err.response?.data?.detail || \"Login failed\")\n      throw err\n    }\n  }\n\n  // Register function\n  const register = async (userData) => {\n    try {\n      setError(null)\n      const response = await apiRegister(userData)\n      return response.data\n    } catch (err) {\n      setError(err.response?.data?.detail || \"Registration failed\")\n      throw err\n    }\n  }\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem(\"token\")\n    setUser(null)\n  }\n\n  // Context value\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user,\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}